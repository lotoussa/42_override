#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <time.h>
#include <sys/types.h>
#include <sys/ptrace.h>
#include <signal.h>

int				main(void)
{
	long		pRet;
	uint		num;
	char		buffer[146];
	__pid_t		pid;

	pid = fork();
	bzero(buffer, 32);
	num = 0;
	if (pid == 0)
	{
		prctl(1, 1);
		ptrace(PTRACE_TRACEME, 0, 0, 0);
		puts("Give me some shellcode, k");
		gets(buffer);
	}
	else
	{
		do
		{
			wait(&num);
			if (((num & 0x7f) == 0) || ('\0' < (char)(((byte)num & 0x7f) + 1) >> 1))
			{
				puts("child is exiting...");
				return 0;
			}
			pRet = ptrace(PTRACE_PEEKUSER, pid, 0x2c, 0);
		} while (pRet != 0xb);
		puts("no exec() for you");
		kill(pid, 9);
	}
	return (0);
}

